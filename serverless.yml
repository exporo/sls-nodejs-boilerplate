service: exporo-sls-nodejs

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  apiGateway:
    binaryMediaTypes:
      - "application/pdf"
  logs:
    restApi: true
  vpc:
    securityGroupIds:
      - Fn::GetAtt: ServerlessVPC.DefaultSecurityGroup
      - Fn::GetAtt: RDSDatabaseSG.GroupId
    subnetIds:
      - Ref: ServerlessSubnetA
      - Ref: ServerlessSubnetB
      - Ref: ServerlessSubnetC
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
      Resource: !GetAtt SQSQueue.Arn
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [DynamoDB, Arn]
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - !Join
          - ""
          - - "Fn::GetAtt": [S3Bucket, Arn]
            - "/*"
    - Effect: Allow
      Action: "secretsmanager:GetSecretValue"
      Resource: !Ref DBSecret
  environment:
    APP_KEY: !Sub "{{resolve:secretsmanager:${self:custom.UUID}-APP_KEY}}"
    DB_HOST:
      Fn::GetAtt: [AuroraRDSCluster, Endpoint.Address]
    DB_PASSWORD: !Sub "{{resolve:secretsmanager:${self:custom.UUID}-DB_PASSWORD}}"
    DYNAMODB_CACHE_TABLE: !Ref DynamoDB
    AWS_BUCKET: !Ref S3Bucket
    SQS: !Ref SQSQueue
    ASSET_URL:
      !Join ["", ["https://", !GetAtt [S3PublicAssetsBucket, DomainName]]]
    APP_ENV: ${opt:stage, self:provider.stage}
    SENTRY_DSN: ""

custom:
  OFFICE_IP: 213.61.197.58/32
  OFFICE_VPN: 93.92.129.168/32
  AVIATRIX_VPN: 18.194.85.220/32
  VPC_CIDR: 10.6
  UUID: ${self:service.name}-${opt:stage, self:provider.stage}
  REGION: ${opt:region, self:provider.region}
  STAGE: ${opt:stage, self:provider.stage}

  customDomain:
    domainPrefix:
      dev: ${self:custom.STAGE_MAPPINGS.${opt:stage, self:provider.stage}.VALUE, '${opt:stage, self:provider.stage}'}
      prod: prod
    domainName: project.exporo.com
    basePath: ${self:custom.customDomain.domainPrefix.${opt:stage, self:provider.stage}, '${self:custom.customDomain.domainPrefix.dev}'}
    stage: ${opt:stage, self:provider.stage}
    createRoute53Record: true
    endpointType: "regional"

  STAGE_MAPPINGS:
    master:
      VALUE: "stage"

  AURORA:
    MIN_CAPACITY: 1
    MAX_CAPACITY: 32
    AUTO_PAUSE_SECONDS: 600
    DELETE_PROTECTION: ${self:custom.AURORA.SWITCH.${opt:stage, self:provider.stage}.DELETE_PROTECTION , '${self:custom.AURORA.SWITCH.default.DELETE_PROTECTION}'}
    AUTO_PAUSE: ${self:custom.AURORA.SWITCH.${opt:stage, self:provider.stage}.AUTO_PAUSE , '${self:custom.AURORA.SWITCH.default.AUTO_PAUSE}'}
    SWITCH:
      prod:
        AUTO_PAUSE: "false"
        DELETE_PROTECTION: "true"
      default:
        #DISABLE DEFAULT AUTOPAUSE TEMPORARLY FOR DEV
        AUTO_PAUSE: "false"
        DELETE_PROTECTION: "false"

  serverless-offline:
    host: 0.0.0.0

  testHelper:
    path: ".serverless/stack-output/outputs.json"

  webpack:
    includeModules: true
    keepOutputdirectory: true

  splitStacks:
    perFunction: false
    perType: true
    perGroupFunction: false

functions: ${file(./application/routes.yml)}

plugins:
  - serverless-webpack
  - serverless-pseudo-parameters
  - serverless-offline
  - deploy-chain
  - serverless-plugin-test-helper
  - serverless-domain-manager

#AWS Resources
resources:
  - ${file(cloudformation.yml)}
